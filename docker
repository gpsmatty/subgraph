# Build stage
FROM graphprotocol/graph-node:latest AS build

WORKDIR /app

COPY package.json yarn.lock ./
RUN yarn install

COPY . .

RUN graph codegen

# Runtime stage
FROM graphprotocol/graph-node:latest

WORKDIR /app

# Create a non-root user and group
RUN groupadd -r graph-node && useradd -r -g graph-node graph-node

# Copy necessary artifacts from the build stage
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/schema.graphql ./schema.graphql
COPY --from=build /app/src ./src
COPY --from=build /app/subgraph.yaml ./subgraph.yaml
COPY --from=build /app/package.json ./package.json
COPY --from=build /app/yarn.lock ./yarn.lock

# Set ownership and permissions
USER graph-node
RUN chown -R graph-node:graph-node /app

# Define a health check
HEALTHCHECK --interval=30s --timeout=10s CMD curl -f http://localhost:8000/ || exit 1

# Start the Graph node
CMD ["graph", "node"]